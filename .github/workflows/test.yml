name: test

on:
  - push
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        manager:
          - bun
          - pnpm
          - yarn
          # - yarn-berry
          - npm
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - if: matrix.manager == 'bun'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - if: matrix.manager == 'bun'
        run: touch bun.lockb
      - if: matrix.manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - if: matrix.manager == 'pnpm'
        run: touch pnpm-lock.yml
      - if: matrix.manager == 'yarn'
        run: npm install -g yarn
      - if: matrix.manager == 'yarn'
        run: touch yarn.lock
      - run: make install
      - run: make test
  lint:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - id: find
        run: |
          echo 'result<<EOF' | tee -a "$GITHUB_OUTPUT"
          find . \( -name '*.sh' -o -name '*.bash' \) -print | xargs echo | tee -a "$GITHUB_OUTPUT"
          echo 'EOF' | tee -a "$GITHUB_OUTPUT"
      # run: echo "result=$(find . \( -name '*.sh' -o -name '*.bash' \) -print | xargs echo)" | tee -a "$GITHUB_ENV"
      # run: |
      #   echo 'result<<EOF' | tee -a "$GITHUB_OUTPUT"
      #   find . \( -name '*.sh' -o -name '*.bash' \) -print | tee -a "$GITHUB_OUTPUT"
      #   echo 'EOF' | tee -a "$GITHUB_OUTPUT"
      # run: |
      #   {
      #     echo 'result<<EOB'
      #     find . \( -name '*.sh' -o -name '*.bash' \) -print
      #     echo EOB
      #   } | tee -a "$GITHUB_OUTPUT"
      - uses: docker://koalaman/shellcheck:stable
        with:
          args: ${{ steps.find.outputs.result }}
